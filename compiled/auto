#!/usr/bin/env bash

# 15 agosto de 2020

# shellcheck disable=SC2034
BLACK="\u001b[30m"
RED="\u001b[1;31m"
GREEN="\u001b[1;32m"
YELLOW="\u001b[1;33m"
BLUE="\u001b[34m"
MAGENTA="\u001b[35m"
CYAN="\u001b[36m"
WHITE="\u001b[37m"
RESET="\u001b[0m"

_menu() {
arg=$1
echo -e "${arg}"
echo -e '-ssh\t\t\t\t| Setting up the ssh key.'
echo -e '-github-nopass or -github\t| Github push without password on project.'
echo -e '-node-install or node\t\t| Install node.tar.xz from the official website.'
echo -e '-install-git or -git\t\t| Install the git the last version.'
echo -e '-nvim-flatpak\t\t\t| Install nvim and configuration.'
echo -e '-go\t\t\t\t| Install go.'
echo -e '-nvim-appimg\t\t\t| Install nvim and configuration.'
echo -e '-chrome\t\t\t\t| Install google chrome.'
echo -e '-flatpak\t\t\t| Install flatpak.'
echo -e '-up\t\t\t\t| Ubuntu/Debian Update.'

echo -e "${RESET}"
}
# Start felib
felib_installed() {
arg=$1
if [ -x "$(command -v "$arg")" ]; then
return 1
else
return 0
fi
}

felib_file_exists() {
arg=$1
if [ -f "$arg" ]; then
return 1
else
return 0
fi
}

felib_dir_exists() {
arg=$1
if [ -d "$arg" ]; then
return 1
else
return 0
fi
}
# Start installer
general_installer_node() {
argv=$1

if [[ -z "$argv" ]]; then
echo "$argv "
echo "Type the node version like | $0 -node 13.9.0"
echo ""
exit 1
else
#echo "Type the version of node"
#read NODEVERSION
cd "$HOME"/Downloads || exit
wget https://nodejs.org/dist/v"$argv"/node-v"$argv"-linux-x64.tar.xz
tar -xvf node-v"$argv"-linux-x64.tar.xz
rm -r node-v"$argv"-linux-x64.tar.xz
mv node-v"$argv"-linux-x64 node
sudo cp -r node/{bin,include,lib,share} /usr/
rm -rf node
cd || exit
exit 0
fi
}

general_installer_nvim-flatpak() {
felib_installed flatpak
case $? in
0)
echo "Flatpak is not installed"
echo "This nvim installation uses flatpak try install it first"
;;
1)
shift
felib_installed git
case $? in
0)
echo "You don have git installed"
;;
1)
flatpak install io.neovim.nvim
git clone https://github.com/batocciero/config_nvim.git \
~/.var/app/io.neovim.nvim/config/nvim
if [ -f "$HOME"/.bashrc ]; then

echo "# alias added by $0" >>"$HOME"/.bashrc
echo "alias vim='flatpak run io.neovim.nvim'" >>"$HOME"/.bashrc

# ROOT
sudo sh -c "echo \" \" >> /root/.bashrc"
sudo sh -c "echo \"# alias added by $0\" >> /root/.bashrc"
sudo sh -c "echo \"alias vim='flatpak run io.neovim.nvim'\" >> /root/.bashrc"
else
echo "there is no .bashrc file"
fi
;;
esac
;;
esac
}

general_installer_go() {
argv=$1

if [ -z "$argv" ]; then
echo ""
echo "Type the version, like: $0 1.14.6"
echo ""
else
GO="go$argv.linux-amd64.tar.gz"

wget https://golang.org/dl/"$GO" -P /home/"$USER"/Downloads/

cd /home/"$USER"/Downloads && sudo tar -C /usr/local -xzf "$GO" || exit
sudo tar -C /usr/local -xzf /home/"$USER"/Downloads/"$GO"

rm /home/"$USER"/Downloads/"$GO"

cd .. || exit

felib_file_exists /home/"$USER"/.bashrc
case $? in
1)
echo "# Added by $0 script" >>/home/"$USER"/.bashrc
echo "export PATH=$PATH:/usr/local/go/bin" >>/home/"$USER"/.bashrc
;;
0)
echo "There is no .bashrc"
;;
esac

felib_file_exists /home/"$USER"/.zshrc
case $? in
1)
echo "# Added by $0 script" >>/home/"$USER"/.zshrc
echo "export PATH=$PATH:/usr/local/go/bin" >>/home/"$USER"/.zshrc
;;
0)
echo "There is no .zshrc"
;;
esac

fi
}

general_installer_nvim-appimage() {
ZSH=/home/"$USER"/.zshrc
BASH=/home/"$USER"/.bashrc

felib_installed git
case $? in
1)
git -C /home/"$USER"/.config/ clone https://github.com/batocciero/config_nvim.git nvim
;;

0)
echo "Git is not installed"
exit 1
;;
esac

wget https://github.com/neovim/neovim/releases/download/stable/nvim.appimage -P /home/"$USER"/Downloads/
sudo mv /home/"$USER"/Downloads/nvim.appimage /usr/local/bin/
sudo chmod +x /usr/local/bin/nvim.appimage

#zsh
felib_file_exists "$ZSH"
case $? in
1)
{
echo "#"
echo "# Line by $0"
echo "alias vim='nvim.appimage'"
} >>"$ZSH"

echo "# " | sudo tee -a /root/.zshrc
echo "# Line by $0" | sudo tee -a /root/.zshrc
echo "alias vim='nvim.appimage'" | sudo tee -a /root/.zshrc

;;

0)
echo "zsh is not installed"
;;
esac

# bash
felib_file_exists "$BASH"
case $? in
1)
{
echo "#"
echo "# Line by $0"
echo "alias vim='nvim.appimage'"
} >>"$BASH"

echo "# " | sudo tee -a /root/.bashrc
echo "# Line by $0" | sudo tee -a /root/.bashrc
echo "alias vim='nvim.appimage'" | sudo tee -a /root/.bashrc

;;

0)
echo "Bash is not installed"
;;
esac
}
# Start general_cmd
general_cmd_github() {
echo "Type the username."
read -r USERNAME
echo "Type the password."
read -r PASSWORD
echo "Type the repository name."
read -r REPONAME
git config remote.origin.url https://"${USERNAME}":"${PASSWORD}"@github.com/"${USERNAME}"/"${REPONAME}".git
}

general_cmd_ssh() {
DIR="$HOME/.ssh/"
FILE="$HOME/.ssh/id_ed25519.pub"
if [ -d "$DIR" ] && [ -f "$FILE" ]; then
echo "You already have an SSH key Here it is:"
echo ""
cat "$HOME"/.ssh/id_ed25519.pub
exit 0
elif [ -d "$DIR" ] && [ ! -f "$FILE" ]; then
echo "You do have the folder but not the ssh file 'id_ed25519.pub"
echo " "
echo "Type Your Email "
read -r EMAIL
echo "Is this your email address correct? [y/n] : $EMAIL"
read -r right
if [[ $right == "y" ]]; then
ssh-keygen -t ed25519 -C "$EMAIL"
echo " "
echo "This is your SSH Key."
cat ~/.ssh/id_ed25519.pub
fi
exit 0
else
echo "You don't have a ssh key. Lets Create one"
echo "Type Your Email "
read -r EMAIL
echo "Is this your email address correct? [y/n] : $EMAIL"
read -r right
if [[ $right == "y" ]]; then
ssh-keygen -t ed25519 -C "$EMAIL"
echo " "
echo "This is your SSH Key."
cat ~/.ssh/id_ed25519.pub
fi
fi
}
# Start the Ubuntu_cmd
Ubuntu_cmd_update() {
sudo apt update
sudo apt upgrade -y
sudo apt clean
sudo apt autoclean
sudo apt autoremove -y

# felib
felib_installed snap
case $? in
1)
sudo snap refresh
;;
esac
# felib
felib_installed flatpak
case $? in
1)
flatpak update
;;
esac
}
# Start the Ubuntu_apt_install
Ubuntu_apt_install_git() {
sudo add-apt-repository ppa:git-core/ppa -y
sudo apt update
sudo apt install -y git
}

Ubuntu_apt_install_chrome() {
cd "$HOME/Downloads/" || exit
felib_installed wget
case $? in
1)
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb -y
rm google-chrome-stable_current_amd64.deb
cd .. || exit
;;
0)
sudo apt install -y wget
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb -y
rm google-chrome-stable_current_amd64.deb
cd .. || exit
;;
esac
}

Ubuntu_apt_install_flatpak() {
felib_installed flatpak
case $? in
1) flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo ;;
0)
sudo apt install flatpak -y
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
;;
esac
}
# Start the main
while [[ "$1" ]]; do
case "$1" in
-ssh)
general_cmd_ssh
exit 0
;;

-github-nopass | -github)
# general_cmd
general_cmd_github
exit 0
;;

-node | -node-install)
# general_installers
general_installer_node "${2}"
exit 0
;;

-git | -install-git)
# Ubuntu_apt_install
Ubuntu_apt_install_git
exit 0
;;

-nvim-flatpak)
# general_installer
general_installer_nvim-flatpak
exit 0
;;

-go)
shift
# general_installer
general_installer_go "${1}"
exit 0
;;

-nvim-appimg)
# general_installer
general_installer_nvim-appimage
exit 0
;;

-chrome)
# Ubuntu_apt_install
Ubuntu_apt_install_chrome
exit 0
;;

-flatpak)
# Ubuntu_apt_install
Ubuntu_apt_install_flatpak
exit 0
;;

-up)
# Ubuntu/cmd
Ubuntu_cmd_update
exit 0
;;

-help | -man | man)
_menu "$YELLOW"
exit 0
;;

*)
_menu "$RED"
exit 0
;;

esac
done

if [[ -z "${1}" ]]; then
_menu "$GREEN"
fi
